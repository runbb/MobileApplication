"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("data/observable");
var observable_property_decorator_1 = require("../../shared/observable-property-decorator");
var config_1 = require("../../config");
var TopicViewModel = /** @class */ (function (_super) {
    __extends(TopicViewModel, _super);
    function TopicViewModel(TopicPage, topicId, topicTitle) {
        var _this = _super.call(this) || this;
        _this.TopicPage = TopicPage;
        _this.topicId = topicId;
        _this.topicTitle = topicTitle;
        _this.title = "";
        _this.title = topicTitle;
        fetch(config_1.config.url + "t/topic/" + topicId + ".json").then(function (res) { return res.json(); })
            .then(function (res) {
            var topicView = TopicPage.getViewById("topicView");
            topicView.src = "<style>a {\n                    background: #00ff9508;\n                    display: block;\n                    margin: 5px;\n                    color: #0080d0;\n                    padding: 7px;\n                    border-radius: 5px;\n                    border: 3px solid #ffffffad;\n                    font-weight: bold;\n                    text-decoration: none;\n                    text-align: center;\n                }\n                * {\n                    direction: rtl;\n                    font-size: 100%;\n                }\n                img {\n                    width: 100%;\n                    min-width: 100%;\n                    max-width: 100%;\n                    height: auto;\n                }\n                code,pre {\n                    word-wrap: break-word;\n                    direction: ltr !important;\n                    text-align: left !important;\n                }\n                pre code {\n                    display: block;\n                    padding: 5px 10px;\n                    color: #222;\n                    background: #f9f9f9;\n                    max-height: 500px;\n                }\n                img.emoji {\n                    width: 1em;\n                    min-width: 1em;\n                    max-width: 1em;\n                    margin-left: 2px;\n                    margin-right: 2px;\n                }\n                article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {\n                    display: block;\n                }\n                aside.onebox {\n                    border: 5px solid #e9e9e9;\n                    padding: 12px 12px 12px 25px;\n                    font-size: 1em;\n                }\n                aside.onebox .onebox-body {\n                    clear: both;\n                }\n                aside.onebox .onebox-body [style*=\"--aspect-ratio\"] {\n                    position: relative;\n                }\n                .badge-notification.clicks {\n                    font-weight: normal;\n                    background-color: #e9e9e9;\n                    top: -1px;\n                    color: #919191;\n                    position: relative;\n                    margin-right: 2px;\n                    border: none;\n                }\n                aside.onebox .onebox-body h3, aside.onebox .onebox-body h4 {\n                    font-size: 1.17em;\n                    margin: 0 0 10px 0;\n                }</style>".trim()
                + res.post_stream.posts[0].cooked;
        });
        return _this;
    }
    __decorate([
        observable_property_decorator_1.ObservableProperty(),
        __metadata("design:type", String)
    ], TopicViewModel.prototype, "title", void 0);
    return TopicViewModel;
}(observable_1.Observable));
exports.TopicViewModel = TopicViewModel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9waWMtdmlldy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInRvcGljLXZpZXctbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw4Q0FBNkM7QUFNN0MsNEZBQWdGO0FBQ2hGLHVDQUFzQztBQUV0QztJQUFvQyxrQ0FBVTtJQUUxQyx3QkFBbUIsU0FBYyxFQUFTLE9BQWMsRUFBUyxVQUFpQjtRQUFsRixZQUNJLGlCQUFPLFNBMkVWO1FBNUVrQixlQUFTLEdBQVQsU0FBUyxDQUFLO1FBQVMsYUFBTyxHQUFQLE9BQU8sQ0FBTztRQUFTLGdCQUFVLEdBQVYsVUFBVSxDQUFPO1FBRDVELFdBQUssR0FBVSxFQUFFLENBQUM7UUFHcEMsS0FBSSxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUM7UUFDeEIsS0FBSyxDQUFJLGVBQU0sQ0FBQyxHQUFHLGdCQUFXLE9BQU8sVUFBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsR0FBRyxDQUFDLElBQUksRUFBRSxFQUFWLENBQVUsQ0FBQzthQUNwRSxJQUFJLENBQUMsVUFBQSxHQUFHO1lBQ0wsSUFBSSxTQUFTLEdBQVcsU0FBUyxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUMzRCxTQUFTLENBQUMsR0FBRyxHQUFHLG05RUFtRUYsQ0FBQyxJQUFJLEVBQUU7a0JBQ25CLEdBQUcsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztRQUN0QyxDQUFDLENBQUMsQ0FBQzs7SUFDUCxDQUFDO0lBN0VxQjtRQUFyQixrREFBa0IsRUFBRTs7aURBQW1CO0lBOEU1QyxxQkFBQztDQUFBLEFBL0VELENBQW9DLHVCQUFVLEdBK0U3QztBQS9FWSx3Q0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwiZGF0YS9vYnNlcnZhYmxlXCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlQXJyYXkgfSBmcm9tIFwiZGF0YS9vYnNlcnZhYmxlLWFycmF5L29ic2VydmFibGUtYXJyYXlcIjtcbmltcG9ydCB7IFBhZ2UgfSBmcm9tICd1aS9wYWdlJztcbmltcG9ydCB7IFdlYlZpZXcgfSBmcm9tICd1aS93ZWItdmlldyc7XG5pbXBvcnQgeyBBY3Rpdml0eUluZGljYXRvciB9IGZyb20gXCJ1aS9hY3Rpdml0eS1pbmRpY2F0b3JcIjtcbmltcG9ydCBtb21lbnQgPSByZXF1aXJlKFwibW9tZW50XCIpO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZVByb3BlcnR5IH0gZnJvbSBcIi4uLy4uL3NoYXJlZC9vYnNlcnZhYmxlLXByb3BlcnR5LWRlY29yYXRvclwiO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSBcIi4uLy4uL2NvbmZpZ1wiO1xuXG5leHBvcnQgY2xhc3MgVG9waWNWaWV3TW9kZWwgZXh0ZW5kcyBPYnNlcnZhYmxlIHtcbiAgICBAT2JzZXJ2YWJsZVByb3BlcnR5KCkgdGl0bGU6c3RyaW5nID0gXCJcIjtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgVG9waWNQYWdlOlBhZ2UsIHB1YmxpYyB0b3BpY0lkOm51bWJlciwgcHVibGljIHRvcGljVGl0bGU6c3RyaW5nKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0b3BpY1RpdGxlO1xuICAgICAgICBmZXRjaChgJHtjb25maWcudXJsfXQvdG9waWMvJHt0b3BpY0lkfS5qc29uYCkudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbiAgICAgICAgLnRoZW4ocmVzID0+e1xuICAgICAgICAgICAgbGV0IHRvcGljVmlldzpXZWJWaWV3ID0gVG9waWNQYWdlLmdldFZpZXdCeUlkKFwidG9waWNWaWV3XCIpO1xuICAgICAgICAgICAgdG9waWNWaWV3LnNyYyA9IGA8c3R5bGU+YSB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMwMGZmOTUwODtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogNXB4O1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzAwODBkMDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogN3B4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogM3B4IHNvbGlkICNmZmZmZmZhZDtcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAqIHtcbiAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uOiBydGw7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvZGUscHJlIHtcbiAgICAgICAgICAgICAgICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgICAgICAgICAgICAgICAgICBkaXJlY3Rpb246IGx0ciAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHByZSBjb2RlIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzIyMjtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2Y5ZjlmOTtcbiAgICAgICAgICAgICAgICAgICAgbWF4LWhlaWdodDogNTAwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGltZy5lbW9qaSB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxZW07XG4gICAgICAgICAgICAgICAgICAgIG1pbi13aWR0aDogMWVtO1xuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDFlbTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDJweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAycHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1haW4sIG5hdiwgc2VjdGlvbiwgc3VtbWFyeSB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhc2lkZS5vbmVib3gge1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBzb2xpZCAjZTllOWU5O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMnB4IDEycHggMTJweCAyNXB4O1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYXNpZGUub25lYm94IC5vbmVib3gtYm9keSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyOiBib3RoO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhc2lkZS5vbmVib3ggLm9uZWJveC1ib2R5IFtzdHlsZSo9XCItLWFzcGVjdC1yYXRpb1wiXSB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmJhZGdlLW5vdGlmaWNhdGlvbi5jbGlja3Mge1xuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTllOWU5O1xuICAgICAgICAgICAgICAgICAgICB0b3A6IC0xcHg7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjOTE5MTkxO1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMnB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGFzaWRlLm9uZWJveCAub25lYm94LWJvZHkgaDMsIGFzaWRlLm9uZWJveCAub25lYm94LWJvZHkgaDQge1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuMTdlbTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIDAgMTBweCAwO1xuICAgICAgICAgICAgICAgIH08L3N0eWxlPmAudHJpbSgpXG4gICAgICAgICAgICArIHJlcy5wb3N0X3N0cmVhbS5wb3N0c1swXS5jb29rZWQ7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiJdfQ==